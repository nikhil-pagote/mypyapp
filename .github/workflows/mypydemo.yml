name: Docker mypydemo CI

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  Compile:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3
    - name: Install python3 pip modules
      run: python3 -m pip install -r requirements.txt
    - name: Compile platform dependent binary
      run: pyinstaller http_serv.py --onefile --name mypydemo-${{ runner.os }}
    - id: string
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ runner.os }}
    - name: Install aws cli
      uses: isbang/setup-awscli@v0.1.0
    - name : Upload Artifact to s3
      run: cd dist; ls -latr; aws s3 cp mypydemo-${{ runner.os }} s3://mypydemo/mypydemo-${{ steps.string.outputs.lowercase }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


    # - name: Upload artifact to S3
    #   run: aws s3 cp .dist/mypydemo-${{ runner.os }} mypydemo/mypydemo-${{ steps.string.outputs.lowercase }}
    # # - name: Upload artifact to S3
    #   uses: prewk/s3-cp-action@v2
    #   with:
    #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     source: '.dist/mypydemo-${{ runner.os }}'
    #     dest: 's3://mypydemo/mypydemo-${{ steps.string.outputs.lowercase }}'
    #     flags: --recursive



    # - name: Build using Kaniko
    #   uses: aevea/action-kaniko@master
    #   with:
    #     image: nikhilpagote/mypydemo-${{ steps.string.outputs.lowercase }}
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #;ls -ld dist/mypydemo
    
    # - name: install docker client on macOS
    #   run: curl https://download.docker.com/mac/static/stable/x86_64/docker-20.10.9.tgz --output docker-20.10.9.tgz; tar xzvf docker-20.10.9.tgz; xattr -rc docker; cp docker/docker /usr/local/bin/
    #   if: runner.os == 'macOS'
    # - name: install docker bildx on macOS
    #   uses: docker/setup-buildx-action@v2
    #   id: buildx
    #   with:
    #     install: true
    #   if: runner.os == 'macOS'
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag nikhilpagote/mypydemo-${{ steps.string.outputs.lowercase }}:$(date +%s)
    # - name: Login to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    # - name: Test the Docker image
    # - name: Push the Docker image to Dockerhub Registry 
      
